// scripts/testNotificaciones.js
const NotificacionService = require('../services/notificacionService');
const { Usuario } = require('../models');

async function testNotificaciones() {
    try {
        console.log('üß™ Iniciando pruebas del sistema de notificaciones...\n');

        // Obtener un usuario de prueba
        const usuario = await Usuario.findOne({ where: { rol: 'administrador' } });
        if (!usuario) {
            console.log('‚ùå No se encontr√≥ ning√∫n administrador para las pruebas');
            return;
        }

        console.log(`üë§ Usuario de prueba: ${usuario.nombre} (ID: ${usuario.id})`);

        // Prueba 1: Notificaci√≥n para usuario espec√≠fico
        console.log('\nüìù Prueba 1: Notificaci√≥n para usuario espec√≠fico');
        await NotificacionService.notificarUsuario(
            usuario.id,
            'Prueba de Notificaci√≥n',
            'Esta es una notificaci√≥n de prueba para verificar que el sistema funciona correctamente.',
            'info'
        );

        // Prueba 2: Notificaci√≥n para administradores
        console.log('\nüìù Prueba 2: Notificaci√≥n para administradores');
        await NotificacionService.notificarAdmins(
            'Prueba de Sistema',
            'Se ha realizado una prueba del sistema de notificaciones.',
            'success'
        );

        // Prueba 3: Notificaci√≥n por rol
        console.log('\nüìù Prueba 3: Notificaci√≥n por rol');
        await NotificacionService.notificarPorRol(
            'administrador',
            'Notificaci√≥n por Rol',
            'Esta notificaci√≥n fue enviada a todos los administradores.',
            'warning'
        );

        // Prueba 4: Notificaci√≥n de solicitud
        console.log('\nüìù Prueba 4: Notificaci√≥n de solicitud');
        await NotificacionService.nuevaSolicitudRetiro(usuario.id, 'TEST-001');

        // Prueba 5: Notificaci√≥n de cotizaci√≥n
        console.log('\nüìù Prueba 5: Notificaci√≥n de cotizaci√≥n');
        await NotificacionService.nuevaCotizacion(usuario.id, 'COT-001');

        // Prueba 6: Notificaci√≥n de visita
        console.log('\nüìù Prueba 6: Notificaci√≥n de visita');
        await NotificacionService.visitaProgramada(usuario.id, 'VIS-001', '15/12/2024 10:00');

        // Prueba 7: Notificaci√≥n de certificado
        console.log('\nüìù Prueba 7: Notificaci√≥n de certificado');
        await NotificacionService.certificadoGenerado(usuario.id, 'CERT-001');

        // Prueba 8: Notificaci√≥n de sistema
        console.log('\nüìù Prueba 8: Notificaci√≥n de sistema');
        await NotificacionService.notificacionSistema(
            'Mantenimiento Programado',
            'El sistema estar√° en mantenimiento ma√±ana de 2:00 a 4:00 AM.',
            'warning'
        );

        console.log('\n‚úÖ Todas las pruebas completadas exitosamente!');
        console.log('üì± Verifica las notificaciones en el panel de administraci√≥n.');

    } catch (error) {
        console.error('‚ùå Error durante las pruebas:', error);
    } finally {
        process.exit(0);
    }
}

// Ejecutar las pruebas
testNotificaciones(); 