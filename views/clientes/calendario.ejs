<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mi Calendario - Felmart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-color: #00616e;
            --primary-dark: #004d57;
            --primary-light: #00818f;
            --secondary-color: #6c757d;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --info-color: #17a2b8;
            --light-bg: #f8f9fa;
            --white: #ffffff;
            --shadow: 0 4px 20px rgba(0,0,0,0.08);
            --shadow-hover: 0 8px 30px rgba(0,0,0,0.12);
            --border-radius: 16px;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--light-bg);
            line-height: 1.6;
        }

        /* Navigation Styles */
        .navbar-custom {
            background: white;
            box-shadow: var(--shadow);
            padding: 1rem 0;
        }

        .navbar-brand {
            display: flex;
            align-items: center;
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--primary-color) !important;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            color: white;
            font-size: 1.2rem;
        }

        .nav-link {
            color: var(--secondary-color) !important;
            font-weight: 500;
            padding: 0.5rem 1rem !important;
            border-radius: 8px;
            transition: var(--transition);
            text-decoration: none;
        }

        .nav-link:hover,
        .nav-link.active {
            color: var(--primary-color) !important;
            background: rgba(0, 97, 110, 0.05);
        }

        .user-dropdown {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            color: white;
            border-radius: 50px;
            padding: 0.5rem 1rem;
            border: none;
            font-weight: 500;
        }

        .dropdown-menu {
            border: none;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            border-radius: 12px;
            padding: 0.5rem;
            min-width: 250px;
            margin-top: 0.5rem;
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            z-index: 1000;
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-header {
            padding: 1rem;
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            color: white;
            border-radius: 8px;
            margin-bottom: 0.5rem;
        }

        .dropdown-item {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            margin: 0.25rem 0;
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #333;
        }

        .dropdown-item:hover {
            background: rgba(0, 97, 110, 0.05);
            transform: translateX(5px);
        }

        .dropdown-item i {
            width: 20px;
            text-align: center;
            margin-right: 0.5rem;
        }

        /* Main Container */
        .main-container {
            padding: 2rem 0;
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Page Header */
        .page-header {
            background: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-content h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .header-content p {
            color: var(--secondary-color);
            font-size: 1.1rem;
            margin: 0;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
        }

        .btn-primary-custom {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            color: white;
            font-weight: 600;
            text-decoration: none;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
        }

        .btn-outline-custom {
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
            background: transparent;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-outline-custom:hover {
            background: var(--primary-color);
            color: white;
        }

        /* Statistics Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
        }

        .stat-card.success::before {
            background: linear-gradient(90deg, var(--success-color), #34ce57);
        }

        .stat-card.warning::before {
            background: linear-gradient(90deg, var(--warning-color), #ffcd3c);
        }

        .stat-card.info::before {
            background: linear-gradient(90deg, var(--info-color), #20c997);
        }

        .stat-card.primary::before {
            background: linear-gradient(90deg, var(--primary-color), var(--primary-light));
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
        }

        .stat-content {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
        }

        .stat-icon.success {
            background: linear-gradient(135deg, var(--success-color), #34ce57);
        }

        .stat-icon.warning {
            background: linear-gradient(135deg, var(--warning-color), #ffcd3c);
        }

        .stat-icon.info {
            background: linear-gradient(135deg, var(--info-color), #20c997);
        }

        .stat-icon.primary {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
        }

        .stat-info h3 {
            font-size: 1.8rem;
            font-weight: 700;
            margin: 0;
            line-height: 1.2;
        }

        .stat-info h3.success {
            color: var(--success-color);
        }

        .stat-info h3.warning {
            color: var(--warning-color);
        }

        .stat-info h3.info {
            color: var(--info-color);
        }

        .stat-info h3.primary {
            color: var(--primary-color);
        }

        .stat-info p {
            color: var(--secondary-color);
            font-size: 0.9rem;
            font-weight: 600;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Main Content Grid */
        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
        }

        /* Calendar Section */
        .calendar-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .calendar-header {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            color: white;
            padding: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .calendar-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .calendar-controls {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .calendar-nav {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition);
        }

        .calendar-nav:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        .month-year {
            font-size: 1.1rem;
            font-weight: 600;
            min-width: 150px;
            text-align: center;
        }

        .calendar-body {
            padding: 0;
        }

        .calendar-table {
            width: 100%;
            border-collapse: collapse;
        }

        .calendar-table th {
            background: #f8f9fa;
            padding: 1rem;
            text-align: center;
            font-weight: 600;
            color: var(--primary-color);
            border-bottom: 1px solid #e9ecef;
            font-size: 0.9rem;
        }

        .calendar-table td {
            width: 14.28%;
            height: 100px;
            vertical-align: top;
            border: 1px solid #f1f3f4;
            padding: 0.5rem;
            position: relative;
            cursor: pointer;
            transition: var(--transition);
        }

        .calendar-table td:hover {
            background: rgba(0, 97, 110, 0.05);
        }

        .calendar-table td.other-month {
            background: #fafafa;
            color: #ccc;
        }

        .calendar-table td.today {
            background: linear-gradient(135deg, rgba(0, 97, 110, 0.1), rgba(0, 129, 143, 0.05));
            border: 2px solid var(--primary-color);
        }

        .date-number {
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }

        .event-dot {
            width: 6px;
            height: 6px;
            border-radius: 50%;
            margin: 1px;
            display: inline-block;
        }

        .event-dot.confirmada {
            background: var(--success-color);
        }

        .event-dot.pendiente {
            background: var(--warning-color);
        }

        .event-dot.cancelada {
            background: var(--danger-color);
        }

        /* Sidebar */
        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        /* Upcoming Events */
        .upcoming-events {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .upcoming-header {
            background: #f8f9fa;
            padding: 1.5rem;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .upcoming-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--primary-color);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .upcoming-count {
            background: var(--primary-color);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .upcoming-list {
            max-height: 400px;
            overflow-y: auto;
        }

        .event-item {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #f1f3f4;
            transition: var(--transition);
        }

        .event-item:hover {
            background: #f8f9fa;
        }

        .event-item:last-child {
            border-bottom: none;
        }

        .event-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.5rem;
        }

        .event-title {
            font-weight: 600;
            color: var(--primary-color);
            font-size: 0.9rem;
            margin: 0;
        }

        .event-status {
            padding: 0.2rem 0.6rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .event-status.confirmada {
            background: rgba(40, 167, 69, 0.1);
            color: var(--success-color);
        }

        .event-status.pendiente {
            background: rgba(255, 193, 7, 0.1);
            color: var(--warning-color);
        }

        .event-status.cancelada {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger-color);
        }

        .event-details {
            font-size: 0.8rem;
            color: var(--secondary-color);
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .event-detail {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .event-detail i {
            width: 14px;
            text-align: center;
        }

        .event-actions {
            margin-top: 0.75rem;
            display: flex;
            gap: 0.5rem;
        }

        .btn-sm-custom {
            padding: 0.3rem 0.6rem;
            font-size: 0.75rem;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.3rem;
            text-decoration: none;
        }

        .btn-view {
            background: #e3f2fd;
            color: #1976d2;
        }

        .btn-view:hover {
            background: #bbdefb;
        }

        .btn-cancel {
            background: #ffebee;
            color: #d32f2f;
        }

        .btn-cancel:hover {
            background: #ffcdd2;
        }

        /* Modal Styles */
        .modal-content {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: 0 15px 50px rgba(0,0,0,0.2);
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
            color: white;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
            padding: 1.25rem 1.5rem;
        }

        .modal-title {
            font-weight: 600;
            font-size: 1.2rem;
        }

        .btn-close {
            filter: invert(1);
        }

        .modal-body {
            padding: 1.5rem;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .detail-item {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            border-left: 3px solid var(--primary-color);
        }

        .detail-label {
            font-size: 0.8rem;
            font-weight: 600;
            color: var(--primary-color);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.25rem;
        }

        .detail-value {
            font-size: 1rem;
            font-weight: 500;
            color: #333;
            margin: 0;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 2rem;
            color: var(--secondary-color);
        }

        .empty-state i {
            font-size: 2.5rem;
            color: rgba(0, 97, 110, 0.15);
            margin-bottom: 1rem;
        }

        .empty-state h5 {
            font-size: 1rem;
            margin-bottom: 0.5rem;
            color: var(--secondary-color);
        }

        .empty-state p {
            font-size: 0.9rem;
            color: var(--secondary-color);
            margin: 0;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                order: -1;
            }
        }

        @media (max-width: 768px) {
            .main-container {
                padding: 1rem 0;
            }

            .page-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .header-actions {
                width: 100%;
                justify-content: center;
            }

            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 1rem;
            }

            .stat-content {
                flex-direction: column;
                text-align: center;
            }

            .calendar-table td {
                height: 60px;
                padding: 0.25rem;
            }

            .date-number {
                font-size: 0.8rem;
            }

            .event-dot {
                width: 4px;
                height: 4px;
            }
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in-up {
            animation: fadeInUp 0.6s ease-out;
        }

        .stagger-1 { animation-delay: 0.1s; }
        .stagger-2 { animation-delay: 0.2s; }
        .stagger-3 { animation-delay: 0.3s; }
        .stagger-4 { animation-delay: 0.4s; }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-custom">
        <div class="container-fluid px-4">
            <a class="navbar-brand" href="/">
                <div class="logo-icon">
                    <i class="fas fa-recycle"></i>
                </div>
                Felmart
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/dashboard">
                            <i class="fas fa-tachometer-alt me-2"></i>Inicio
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/clientes/solicitudes">
                            <i class="fas fa-file-alt me-2"></i>Mis Solicitudes
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/clientes/cotizaciones">
                            <i class="fas fa-calculator me-2"></i>Cotizaciones
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/clientes/calendario">
                            <i class="fas fa-calendar-alt me-2"></i>Calendario
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/clientes/certificados">
                            <i class="fas fa-certificate me-2"></i>Certificados
                        </a>
                    </li>
                </ul>
                
                <div class="dropdown">
                    <button class="btn user-dropdown dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-user me-2"></i>
                        <% if (typeof user !== 'undefined' && user) { %>
                            <%= user.nombreEmpresa || user.nombre || 'Cliente' %>
                        <% } else { %>
                            Cliente
                        <% } %>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="userDropdown">
                        <li class="dropdown-header">
                            <div class="d-flex align-items-center">
                                <div class="user-avatar me-2">
                                    <i class="fas fa-user-circle"></i>
                                </div>
                                <div>
                                    <small class="text-muted">Bienvenido</small><br>
                                    <strong><%= (typeof user !== 'undefined' && user) ? (user.nombre || 'Cliente') : 'Cliente' %></strong>
                                </div>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" href="/clientes/perfil/miperfil">
                                <i class="fas fa-user me-2 text-primary"></i>
                                Mi Perfil
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="/clientes/perfil/cambiar-password">
                                <i class="fas fa-key me-2 text-warning"></i>
                                Cambiar Contraseña
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="/clientes/ayuda-soporte">
                                <i class="fas fa-question-circle me-2 text-info"></i>
                                Ayuda y Soporte
                            </a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" href="/">
                                <i class="fas fa-home me-2 text-secondary"></i>
                                Volver al Inicio
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item text-danger" href="/logout">
                                <i class="fas fa-sign-out-alt me-2"></i>
                                Cerrar Sesión
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>
    <!-- Main Container -->
    <div class="container-fluid main-container px-4">
        <!-- Page Header -->
        <div class="page-header fade-in-up">
            <div class="header-content">
                <h1>Mi Calendario</h1>
                <p>Gestiona tus visitas técnicas programadas</p>
            </div>
            <div class="header-actions">
                <a href="/clientes/calendario/agendar-visita" class="btn-primary-custom">
                    <i class="fas fa-plus"></i>
                    Agendar Nueva Visita
                </a>
                <a href="#" class="btn-outline-custom" id="btnVerTodasVisitas">
                    <i class="fas fa-list"></i>
                    Ver Todas las Visitas
                </a>
            </div>
        </div>
        
        <!-- Statistics Grid -->
        <div class="stats-grid fade-in-up stagger-1">
            <div class="stat-card success">
                <div class="stat-content">
                    <div class="stat-icon success">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                    <div class="stat-info">
                        <h3 class="success" id="confirmadasCount">-</h3>
                        <p>Confirmadas</p>
                    </div>
                </div>
            </div>
            
            <div class="stat-card warning">
                <div class="stat-content">
                    <div class="stat-icon warning">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stat-info">
                        <h3 class="warning" id="pendientesCount">-</h3>
                        <p>Pendientes</p>
                    </div>
                </div>
            </div>
            
            <div class="stat-card info">
                <div class="stat-content">
                    <div class="stat-icon info">
                        <i class="fas fa-calendar-day"></i>
                    </div>
                    <div class="stat-info">
                        <h3 class="info" id="estaSemanaCount">-</h3>
                        <p>Esta Semana</p>
                    </div>
                </div>
            </div>
            
            <div class="stat-card primary">
                <div class="stat-content">
                    <div class="stat-icon primary">
                        <i class="fas fa-calendar"></i>
                    </div>
                    <div class="stat-info">
                        <h3 class="primary" id="totalVisitasCount">-</h3>
                        <p>Total Visitas</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Main Content Grid -->
        <div class="content-grid fade-in-up stagger-2" id="mainContentGrid">
            <!-- Calendar -->
            <div class="calendar-container">
                <div class="calendar-header">
                    <h5 class="calendar-title">
                        <i class="fas fa-calendar-alt"></i>
                        Calendario de Visitas
                    </h5>
                    <div class="calendar-controls">
                        <button class="calendar-nav" onclick="mesAnterior()" id="prevMonthBtn">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <div class="month-year" id="monthYear">Junio 2025</div>
                        <button class="calendar-nav" onclick="mesSiguiente()" id="nextMonthBtn">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
                
                <div class="calendar-body">
                    <table class="calendar-table">
                        <thead>
                            <tr>
                                <th>Dom</th>
                                <th>Lun</th>
                                <th>Mar</th>
                                <th>Mié</th>
                                <th>Jue</th>
                                <th>Vie</th>
                                <th>Sáb</th>
                            </tr>
                        </thead>
                        <tbody id="calendarBody">
                            <!-- Calendar days will be generated by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
            
            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Upcoming Events -->
                <div class="upcoming-events">
                    <div class="upcoming-header">
                        <h5 class="upcoming-title">
                            <i class="fas fa-clock"></i>
                            Próximas Visitas
                        </h5>
                        <span class="upcoming-count" id="proximasCount">0</span>
                    </div>
                    <div class="upcoming-list" id="proximasVisitas">
                        <!-- Events will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
        <!-- Sección expandida de todas las visitas -->
        <div class="container-fluid mt-4" id="seccionTodasVisitas" style="display:none;">
            <div class="card" style="border-radius: 20px; box-shadow: 0 4px 20px rgba(0,0,0,0.08);">
                <div class="card-header d-flex justify-content-between align-items-center" style="border-radius: 20px 20px 0 0; background: #f8f9fa;">
                    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Todas las Visitas</h5>
                    <button class="btn btn-success btn-sm" onclick="exportarExcelTodas()">
                        <i class="fas fa-file-excel me-2"></i>Exportar Excel
                    </button>
                </div>
                <div class="card-body" style="background: #fff; border-radius: 0 0 20px 20px;">
                    <div id="tarjetasTodasVisitas">
                        <!-- Tarjetas generadas por JavaScript -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Detalle Visita -->
    <div class="modal fade" id="modalDetalleVisita" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-calendar-check me-2"></i>
                        Detalle de Visita
                    </h5>
                    <button type="button" class="btn-close" onclick="cerrarModal('modalDetalleVisita')"></button>
                </div>
                <div class="modal-body" id="detalleVisitaContent">
                    <!-- Content will be loaded here -->
                </div>
                <div class="modal-footer" id="detalleVisitaActions">
                    <!-- Actions will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Variables globales
        let currentDate = new Date();
        let currentMonth = currentDate.getMonth();
        let currentYear = currentDate.getFullYear();
        let visitasFiltradas = []; // Para almacenar visitas filtradas
        
        // Datos de demostración
        const visitasDemoData = [
            {
                id: 1,
                tipo: 'evaluacion',
                titulo: 'Evaluación de Residuos Electrónicos',
                fecha: '2025-06-20',
                hora: '10:00',
                estado: 'confirmada',
                prioridad: 'normal',
                direccion: 'Av. Libertador Bernardo O\'Higgins 1234, Santiago',
                descripcion: 'Evaluación de computadores y equipos electrónicos obsoletos',
                contacto: {
                    nombre: 'María González',
                    telefono: '+56 9 8765 4321'
                }
            },
            {
                id: 2,
                tipo: 'retiro',
                titulo: 'Retiro de Materiales Reciclables',
                fecha: '2025-06-22',
                hora: '14:00',
                estado: 'pendiente',
                prioridad: 'alta',
                direccion: 'Calle Principal 567, Concepción',
                descripcion: 'Retiro de papel, cartón y plásticos acumulados',
                contacto: {
                    nombre: 'Carlos Silva',
                    telefono: '+56 9 1234 5678'
                }
            },
            {
                id: 3,
                tipo: 'inspeccion',
                titulo: 'Inspección Técnica Mensual',
                fecha: '2025-06-25',
                hora: '09:00',
                estado: 'confirmada',
                prioridad: 'normal',
                direccion: 'Parque Industrial Norte, Lote 45',
                descripcion: 'Inspección rutinaria de instalaciones y procesos',
                contacto: {
                    nombre: 'Ana Torres',
                    telefono: '+56 9 9876 5432'
                }
            },
            {
                id: 4,
                tipo: 'seguimiento',
                titulo: 'Seguimiento Post-Servicio',
                fecha: '2025-06-18',
                hora: '15:30',
                estado: 'confirmada',
                prioridad: 'normal',
                direccion: 'Zona Comercial 123, Valparaíso',
                descripcion: 'Verificación de implementación de mejoras propuestas',
                contacto: {
                    nombre: 'Roberto Díaz',
                    telefono: '+56 9 5555 1234'
                }
            },
            {
                id: 5,
                tipo: 'evaluacion',
                titulo: 'Evaluación de Aceites Usados',
                fecha: '2025-06-28',
                hora: '11:00',
                estado: 'pendiente',
                prioridad: 'urgente',
                direccion: 'Sector Industrial Sur, Calle 8 #456',
                descripcion: 'Evaluación y clasificación de aceites industriales usados',
                contacto: {
                    nombre: 'Patricia López',
                    telefono: '+56 9 7777 8888'
                }
            }
        ];

        // Mapeo de tipos y estados
        const tipoLabels = {
            'evaluacion': 'Evaluación',
            'retiro': 'Retiro',
            'inspeccion': 'Inspección',
            'seguimiento': 'Seguimiento'
        };

        const estadoLabels = {
            'pendiente': 'Pendiente',
            'confirmada': 'Confirmada',
            'cancelada': 'Cancelada'
        };

        const prioridadLabels = {
            'normal': 'Normal',
            'alta': 'Alta',
            'urgente': 'Urgente'
        };

        // Inicialización
        document.addEventListener('DOMContentLoaded', function() {
            initializeCalendar();
            loadStatistics();
            loadUpcomingEvents();
            loadAllVisits();
            setupKeyboardShortcuts();
            // Evento para mostrar/ocultar la sección expandida
            document.getElementById('btnVerTodasVisitas').addEventListener('click', function(e) {
                e.preventDefault();
                const seccion = document.getElementById('seccionTodasVisitas');
                if (seccion.style.display === 'none') {
                    renderTablaTodasVisitas();
                    seccion.style.display = 'block';
                    // Scroll hacia la sección
                    seccion.scrollIntoView({ behavior: 'smooth' });
                } else {
                    seccion.style.display = 'none';
                }
            });
        });

        // Configurar shortcuts de teclado
        function setupKeyboardShortcuts() {
            document.addEventListener('keydown', function(e) {
                if (e.ctrlKey) {
                    switch(e.key) {
                        case 'ArrowLeft':
                            e.preventDefault();
                            mesAnterior();
                            break;
                        case 'ArrowRight':
                            e.preventDefault();
                            mesSiguiente();
                            break;
                        case 'h':
                            e.preventDefault();
                            irAHoy();
                            break;
                    }
                }
            });
        }

        // Cargar estadísticas
        function loadStatistics() {
            const confirmadas = visitasDemoData.filter(v => v.estado === 'confirmada').length;
            const pendientes = visitasDemoData.filter(v => v.estado === 'pendiente').length;
            
            // Calcular visitas de esta semana
            const today = new Date();
            const weekStart = new Date(today.getFullYear(), today.getMonth(), today.getDate() - today.getDay());
            const weekEnd = new Date(today.getFullYear(), today.getMonth(), today.getDate() - today.getDay() + 6);
            
            const estaSemana = visitasDemoData.filter(v => {
                const visitaDate = new Date(v.fecha);
                return visitaDate >= weekStart && visitaDate <= weekEnd && v.estado !== 'cancelada';
            }).length;
            
            // Animar contadores
            animateCounter('confirmadasCount', confirmadas);
            animateCounter('pendientesCount', pendientes);
            animateCounter('estaSemanaCount', estaSemana);
            animateCounter('totalVisitasCount', visitasDemoData.filter(v => v.estado !== 'cancelada').length);
        }

        // Animar contadores
        function animateCounter(elementId, targetValue) {
            const element = document.getElementById(elementId);
            if (!element) {
                console.warn(`Element with id '${elementId}' not found`);
                return;
            }
            let currentValue = 0;
            const increment = targetValue / 20;
            const timer = setInterval(() => {
                currentValue += increment;
                if (currentValue >= targetValue) {
                    element.textContent = targetValue;
                    clearInterval(timer);
                } else {
                    element.textContent = Math.floor(currentValue);
                }
            }, 50);
        }

        // Inicializar calendario
        function initializeCalendar() {
            generateCalendar(currentMonth, currentYear);
        }

        // Generar calendario
        function generateCalendar(month, year) {
            const monthNames = [
                'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
            ];
            
            const monthYearElement = document.getElementById('monthYear');
            if (monthYearElement) {
                monthYearElement.textContent = `${monthNames[month]} ${year}`;
            }
            
            const firstDay = new Date(year, month, 1).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();
            const today = new Date();
            
            let calendarHTML = '';
            let date = 1;
            
            // Generar 6 filas para cubrir todos los casos
            for (let week = 0; week < 6; week++) {
                calendarHTML += '<tr>';
                
                for (let day = 0; day < 7; day++) {
                    if (week === 0 && day < firstDay) {
                        // Días del mes anterior
                        const prevMonth = month === 0 ? 11 : month - 1;
                        const prevYear = month === 0 ? year - 1 : year;
                        const prevMonthDays = new Date(prevYear, prevMonth + 1, 0).getDate();
                        const prevDate = prevMonthDays - firstDay + day + 1;
                        calendarHTML += `<td class="other-month">${prevDate}</td>`;
                    } else if (date > daysInMonth) {
                        // Días del mes siguiente
                        const nextDate = date - daysInMonth;
                        calendarHTML += `<td class="other-month">${nextDate}</td>`;
                        date++;
                    } else {
                        // Días del mes actual
                        const cellDate = new Date(year, month, date);
                        const isToday = cellDate.toDateString() === today.toDateString();
                        const events = getEventsForDate(cellDate);
                        
                        let cellClass = '';
                        if (isToday) cellClass += ' today';
                        
                        let eventsHTML = '';
                        if (events.length > 0) {
                            events.forEach(event => {
                                eventsHTML += `<span class="event-dot ${event.estado}" title="${event.titulo}"></span>`;
                            });
                        }
                        
                        calendarHTML += `
                            <td class="${cellClass}">
                                <div class="date-number">${date}</div>
                                <div>${eventsHTML}</div>
                            </td>
                        `;
                        date++;
                    }
                }
                
                calendarHTML += '</tr>';
                
                // Si ya hemos cubierto todos los días del mes, salir del bucle
                if (date > daysInMonth) break;
            }
            
            const calendarBody = document.getElementById('calendarBody');
            if (calendarBody) {
                calendarBody.innerHTML = calendarHTML;
            }
        }

        // Obtener eventos para una fecha específica
        function getEventsForDate(date) {
            const dateString = date.toISOString().split('T')[0];
            return visitasDemoData.filter(visita => visita.fecha === dateString && visita.estado !== 'cancelada');
        }

        // Navegación del calendario
        function mesAnterior() {
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear--;
            }
            generateCalendar(currentMonth, currentYear);
        }

        function mesSiguiente() {
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear++;
            }
            generateCalendar(currentMonth, currentYear);
        }

        function irAHoy() {
            const today = new Date();
            currentMonth = today.getMonth();
            currentYear = today.getFullYear();
            generateCalendar(currentMonth, currentYear);
        }

        // Cargar próximas visitas
        function loadUpcomingEvents() {
            const today = new Date();
            const upcomingEvents = visitasDemoData
                .filter(v => new Date(v.fecha) >= today && v.estado !== 'cancelada')
                .sort((a, b) => new Date(a.fecha) - new Date(b.fecha))
                .slice(0, 5);
            
            let eventsHTML = '';
            
            if (upcomingEvents.length === 0) {
                eventsHTML = `
                    <div class="empty-state">
                        <i class="fas fa-calendar-times"></i>
                        <h5>No hay visitas próximas</h5>
                        <p>¡Agenda tu primera visita técnica!</p>
                    </div>
                `;
            } else {
                upcomingEvents.forEach(visita => {
                    const fechaFormateada = formatearFecha(visita.fecha);
                    const diasRestantes = calcularDiasRestantes(visita.fecha);
                    
                    eventsHTML += `
                        <div class="event-item">
                            <div class="event-header">
                                <h6 class="event-title">${visita.titulo}</h6>
                                <span class="event-status ${visita.estado}">${estadoLabels[visita.estado]}</span>
                            </div>
                            <div class="event-details">
                                <div class="event-detail">
                                    <i class="fas fa-calendar-day"></i>
                                    <span>${fechaFormateada}</span>
                                </div>
                                <div class="event-detail">
                                    <i class="fas fa-clock"></i>
                                    <span>${visita.hora}</span>
                                </div>
                                <div class="event-detail">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <span>${visita.direccion.substring(0, 40)}...</span>
                                </div>
                                ${diasRestantes ? `<div class="event-detail"><i class="fas fa-hourglass-half"></i><span>${diasRestantes}</span></div>` : ''}
                            </div>
                            <div class="event-actions">
                                <button class="btn-sm-custom btn-view" onclick="verDetalleVisita(${visita.id})">
                                    <i class="fas fa-eye"></i>Ver
                                </button>
                                ${visita.estado === 'pendiente' ? `
                                    <button class="btn-sm-custom btn-cancel" onclick="cancelarVisita(${visita.id})">
                                        <i class="fas fa-times"></i>Cancelar
                                    </button>
                                ` : ''}
                            </div>
                        </div>
                    `;
                });
            }
            
            const proximasVisitasElement = document.getElementById('proximasVisitas');
            const proximasCountElement = document.getElementById('proximasCount');
            
            if (proximasVisitasElement) {
                proximasVisitasElement.innerHTML = eventsHTML;
            }
            if (proximasCountElement) {
                proximasCountElement.textContent = upcomingEvents.length;
            }
        }

        // Formatear fecha
        function formatearFecha(fechaString) {
            const fecha = new Date(fechaString);
            const opciones = { 
                month: 'short', 
                day: 'numeric' 
            };
            return fecha.toLocaleDateString('es-ES', opciones);
        }

        // Calcular días restantes
        function calcularDiasRestantes(fechaString) {
            const today = new Date();
            const fecha = new Date(fechaString);
            const diffTime = fecha - today;
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            
            if (diffDays === 0) return 'Hoy';
            if (diffDays === 1) return 'Mañana';
            if (diffDays > 1) return `En ${diffDays} días`;
            return null;
        }

        // Ver detalle de visita
        function verDetalleVisita(id) {
            const visita = visitasDemoData.find(v => v.id === id);
            if (!visita) return;
            
            const fechaFormateada = formatearFechaCompleta(visita.fecha);
            
            const detalleHTML = `
                <div class="detail-grid">
                    <div class="detail-item">
                        <div class="detail-label">Tipo de Visita</div>
                        <div class="detail-value">${tipoLabels[visita.tipo]}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Estado</div>
                        <div class="detail-value">
                            <span class="event-status ${visita.estado}">${estadoLabels[visita.estado]}</span>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Fecha</div>
                        <div class="detail-value">${fechaFormateada}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Hora</div>
                        <div class="detail-value">${visita.hora}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Prioridad</div>
                        <div class="detail-value">${prioridadLabels[visita.prioridad]}</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Contacto</div>
                        <div class="detail-value">${visita.contacto.nombre}</div>
                    </div>
                </div>
                
                <div class="detail-item mt-3">
                    <div class="detail-label">Dirección</div>
                    <div class="detail-value">${visita.direccion}</div>
                </div>
                
                ${visita.descripcion ? `
                    <div class="detail-item mt-3">
                        <div class="detail-label">Descripción</div>
                        <div class="detail-value">${visita.descripcion}</div>
                    </div>
                ` : ''}
                
                <div class="detail-item mt-3">
                    <div class="detail-label">Teléfono de Contacto</div>
                    <div class="detail-value">${visita.contacto.telefono}</div>
                </div>
            `;
            
            const actionsHTML = `
                <button type="button" class="btn btn-secondary" onclick="cerrarModal('modalDetalleVisita')">
                    <i class="fas fa-times me-2"></i>Cerrar
                </button>
                ${visita.estado === 'pendiente' ? `
                    <button type="button" class="btn btn-danger" onclick="cancelarVisita(${visita.id}); cerrarModal('modalDetalleVisita');">
                        <i class="fas fa-ban me-2"></i>Cancelar Visita
                    </button>
                ` : ''}
            `;
            
            const detalleContent = document.getElementById('detalleVisitaContent');
            const detalleActions = document.getElementById('detalleVisitaActions');
            
            if (detalleContent) {
                detalleContent.innerHTML = detalleHTML;
            }
            if (detalleActions) {
                detalleActions.innerHTML = actionsHTML;
            }
            
            const modal = document.getElementById('modalDetalleVisita');
            if (modal) {
                modal.style.display = 'block';
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
            }
        }

        // Formatear fecha completa
        function formatearFechaCompleta(fechaString) {
            const fecha = new Date(fechaString);
            const opciones = { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            };
            return fecha.toLocaleDateString('es-ES', opciones);
        }

        // Cancelar visita
        function cancelarVisita(id) {
            if (confirm('¿Estás seguro de que deseas cancelar esta visita?')) {
                const visitaIndex = visitasDemoData.findIndex(v => v.id === id);
                if (visitaIndex !== -1) {
                    visitasDemoData[visitaIndex].estado = 'cancelada';
                    
                    // Actualizar interfaz
                    generateCalendar(currentMonth, currentYear);
                    loadStatistics();
                    loadUpcomingEvents();
                    
                    // Si el modal de todas las visitas está abierto, actualizar también
                    if (document.getElementById('modalTodasVisitas').classList.contains('show')) {
                        filtrarVisitas();
                    }
                    
                    mostrarAlerta('Visita cancelada. Felmart ha sido notificado.', 'warning');
                }
            }
        }

        // Cargar todas las visitas (debajo de próximas visitas)
        function loadAllVisits() {
            // Ordenar por fecha ascendente y solo las que no están canceladas
            const allVisits = visitasDemoData.filter(v => v.estado !== 'cancelada')
                .sort((a, b) => new Date(a.fecha) - new Date(b.fecha));
            let html = '';
            if (allVisits.length === 0) {
                html = `
                    <div class="empty-state">
                        <i class="fas fa-calendar-times"></i>
                        <h5>No hay visitas registradas</h5>
                        <p>¡Agenda tu primera visita técnica!</p>
                    </div>
                `;
            } else {
                allVisits.forEach(visita => {
                    const fechaFormateada = formatearFecha(visita.fecha);
                    html += `
                        <div class="event-item">
                            <div class="event-header">
                                <h6 class="event-title">${visita.titulo}</h6>
                                <span class="event-status ${visita.estado}">${estadoLabels[visita.estado]}</span>
                            </div>
                            <div class="event-details">
                                <div class="event-detail">
                                    <i class="fas fa-calendar-day"></i>
                                    <span>${fechaFormateada}</span>
                                </div>
                                <div class="event-detail">
                                    <i class="fas fa-clock"></i>
                                    <span>${visita.hora}</span>
                                </div>
                                <div class="event-detail">
                                    <i class="fas fa-map-marker-alt"></i>
                                    <span>${visita.direccion.substring(0, 40)}...</span>
                                </div>
                                <div class="event-detail">
                                    <i class="fas fa-tag"></i>
                                    <span>${tipoLabels[visita.tipo]}</span>
                                </div>
                            </div>
                            <div class="event-actions">
                                <button class="btn-sm-custom btn-view" onclick="verDetalleVisita(${visita.id})">
                                    <i class="fas fa-eye"></i>Ver
                                </button>
                            </div>
                        </div>
                    `;
                });
            }
            const todasVisitasElement = document.getElementById('todasVisitas');
            if (todasVisitasElement) {
                todasVisitasElement.innerHTML = html;
            }
        }

        // Renderizar tarjetas de todas las visitas en la sección expandida
        function renderTablaTodasVisitas() {
            const contenedor = document.getElementById('tarjetasTodasVisitas');
            if (!contenedor) return;
            const allVisits = visitasDemoData.filter(v => v.estado !== 'cancelada')
                .sort((a, b) => new Date(a.fecha) - new Date(b.fecha));
            let html = '';
            if (allVisits.length === 0) {
                html = `
                    <div class="empty-state">
                        <i class="fas fa-calendar-times"></i>
                        <h5>No hay visitas registradas</h5>
                        <p>¡Agenda tu primera visita técnica!</p>
                    </div>
                `;
            } else {
                allVisits.forEach(visita => {
                    const fecha = new Date(visita.fecha);
                    const fechaCorta = fecha.toLocaleDateString('es-ES', { day: '2-digit', month: 'short' });
                    const diaSemana = fecha.toLocaleDateString('es-ES', { weekday: 'short' });
                    html += `
                        <div style="background: #fff; border-radius: 16px; box-shadow: 0 2px 12px rgba(0,0,0,0.07); margin-bottom: 1.5rem; padding: 1.5rem 1.5rem 1rem 1.5rem; display: flex; flex-wrap: wrap; align-items: flex-start; gap: 1.5rem;">
                            <div style="min-width: 90px; text-align: center;">
                                <div style="font-size: 1.5rem; font-weight: 700; color: var(--primary-color);">${fechaCorta}</div>
                                <div style="font-size: 0.95rem; color: #888; text-transform: lowercase;">${diaSemana}</div>
                            </div>
                            <div style="flex: 1; min-width: 220px;">
                                <div style="display: flex; align-items: center; gap: 0.7rem; margin-bottom: 0.3rem;">
                                    <span class="badge bg-light text-dark" style="font-size: 0.95rem; font-weight: 600;">${tipoLabels[visita.tipo]}</span>
                                    <span class="event-status ${visita.estado}" style="font-size: 0.95rem; font-weight: 600;">${estadoLabels[visita.estado]}</span>
                                    <span class="badge ${getPrioridadClass(visita.prioridad)}" style="font-size: 0.95rem; font-weight: 600;">${prioridadLabels[visita.prioridad]}</span>
                                </div>
                                <div style="font-size: 1.1rem; font-weight: 700; color: var(--primary-color);">${visita.titulo}</div>
                                <div style="font-size: 0.97rem; color: #555; margin-bottom: 0.3rem;">${visita.descripcion ? visita.descripcion.substring(0, 80) + '...' : 'Sin descripción'}</div>
                                <div style="display: flex; flex-wrap: wrap; gap: 1.2rem; color: #666; font-size: 0.97rem; margin-top: 0.2rem;">
                                    <span><i class="fas fa-clock me-1"></i> ${visita.hora}</span>
                                    <span><i class="fas fa-map-marker-alt me-1"></i> ${visita.direccion.substring(0, 40)}...</span>
                                </div>
                            </div>
                            <div style="display: flex; flex-direction: column; gap: 0.5rem; align-items: flex-end; min-width: 80px;">
                                <button class="btn btn-outline-primary btn-sm" onclick="verDetalleVisita(${visita.id})" title="Ver Detalles" style="border-radius: 8px; min-width: 40px;"><i class="fas fa-eye"></i></button>
                                ${visita.estado === 'pendiente' ? `<button class="btn btn-outline-danger btn-sm" onclick="cancelarVisita(${visita.id})" title="Cancelar" style="border-radius: 8px; min-width: 40px;"><i class="fas fa-times"></i></button>` : ''}
                            </div>
                        </div>
                    `;
                });
            }
            contenedor.innerHTML = html;
        }

        // Obtener clase CSS para prioridad
        function getPrioridadClass(prioridad) {
            switch(prioridad) {
                case 'normal': return 'bg-info';
                case 'alta': return 'bg-warning';
                case 'urgente': return 'bg-danger';
                default: return 'bg-secondary';
            }
        }

        // Exportar a Excel desde la sección expandida
        function exportarExcelTodas() {
            const allVisits = visitasDemoData.filter(v => v.estado !== 'cancelada')
                .sort((a, b) => new Date(a.fecha) - new Date(b.fecha));
            const data = [];
            data.push([
                'Fecha',
                'Hora',
                'Tipo de Visita',
                'Título',
                'Estado',
                'Prioridad',
                'Dirección Completa',
                'Descripción',
                'Contacto',
                'Teléfono',
                'Observaciones'
            ]);
            allVisits.forEach(visita => {
                const fecha = new Date(visita.fecha).toLocaleDateString('es-ES');
                data.push([
                    fecha,
                    visita.hora,
                    tipoLabels[visita.tipo],
                    visita.titulo,
                    estadoLabels[visita.estado],
                    prioridadLabels[visita.prioridad],
                    visita.direccion,
                    visita.descripcion || 'Sin descripción',
                    visita.contacto.nombre,
                    visita.contacto.telefono,
                    `Creado: ${fecha} | ID: ${visita.id}`
                ]);
            });
            let csvContent = '';
            data.forEach(row => {
                csvContent += row.map(cell => `"${cell}"`).join(',') + '\n';
            });
            const BOM = '\uFEFF';
            const blob = new Blob([BOM + csvContent], {
                type: 'application/vnd.ms-excel;charset=utf-8;'
            });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', `Mis_Visitas_Felmart_${new Date().toISOString().split('T')[0]}.csv`);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            mostrarAlerta('Archivo Excel exportado exitosamente', 'success');
        }

        // Cerrar modal
        function cerrarModal(modalId) {
            const modal = document.getElementById(modalId);
            if (!modal) {
                console.warn(`Modal with id '${modalId}' not found`);
                return;
            }
            
            modal.style.display = 'none';
            modal.classList.remove('show');
            document.body.style.overflow = 'auto';
            
            // Limpiar filtros si es el modal de todas las visitas
            if (modalId === 'modalTodasVisitas') {
                const filtroEstado = document.getElementById('filtroEstado');
                const filtroTipo = document.getElementById('filtroTipo');
                const ordenarPor = document.getElementById('ordenarPor');
                const buscarVisita = document.getElementById('buscarVisita');
                
                if (filtroEstado) filtroEstado.value = '';
                if (filtroTipo) filtroTipo.value = '';
                if (ordenarPor) ordenarPor.value = 'fecha_asc';
                if (buscarVisita) buscarVisita.value = '';
            }
        }

        // Mostrar alertas
        function mostrarAlerta(mensaje, tipo = 'info') {
            const alertaExistente = document.querySelector('.alert-floating');
            if (alertaExistente) {
                alertaExistente.remove();
            }
            
            const colores = {
                'success': 'var(--success-color)',
                'warning': 'var(--warning-color)',
                'error': 'var(--danger-color)',
                'info': 'var(--info-color)'
            };
            
            const iconos = {
                'success': 'fas fa-check-circle',
                'warning': 'fas fa-exclamation-triangle',
                'error': 'fas fa-times-circle',
                'info': 'fas fa-info-circle'
            };
            
            const alerta = document.createElement('div');
            alerta.className = 'alert-floating fade-in-up';
            alerta.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: white;
                border-left: 4px solid ${colores[tipo]};
                padding: 1rem 1.5rem;
                border-radius: 8px;
                box-shadow: var(--shadow-hover);
                z-index: 9999;
                max-width: 400px;
                display: flex;
                align-items: center;
                gap: 0.75rem;
            `;
            
            alerta.innerHTML = `
                <i class="${iconos[tipo]}" style="color: ${colores[tipo]}; font-size: 1.2rem;"></i>
                <span style="flex: 1; font-weight: 500;">${mensaje}</span>
                <button onclick="this.parentElement.remove()" style="background: none; border: none; font-size: 1.2rem; color: #999; cursor: pointer;">×</button>
            `;
            
            document.body.appendChild(alerta);
            
            // Auto-remover después de 5 segundos
            setTimeout(() => {
                if (alerta.parentElement) {
                    alerta.remove();
                }
            }, 5000);
        }

        // Dropdown de usuario
        function toggleDropdown() {
            const dropdown = document.getElementById('userDropdownMenu');
            dropdown.classList.toggle('show');
        }

        // Cerrar dropdown al hacer clic fuera
        document.addEventListener('click', function(e) {
            const dropdown = document.getElementById('userDropdownMenu');
            const button = document.getElementById('userDropdown');
            if (!button.contains(e.target) && !dropdown.contains(e.target)) {
                dropdown.classList.remove('show');
            }
        });

        // Cerrar modales al hacer clic fuera
        window.addEventListener('click', function(e) {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                if (e.target === modal) {
                    cerrarModal(modal.id);
                }
            });
        });

        // Auto-refresh cada 5 minutos
        setInterval(() => {
            loadStatistics();
            loadUpcomingEvents();
        }, 300000);

        // Mensaje de bienvenida
        setTimeout(() => {
            mostrarAlerta('Bienvenido a tu calendario. Aquí puedes ver todas tus visitas programadas.', 'info');
        }, 1500);
    </script>
</body>
</html>